[user]
  email=matthew@lyonheart.us
  name=Matthew Lyon
[github]
  user = mattly

[core]
  excludesfile=~/.gitignore

[color]
  ui = auto
  diff=auto
  status=auto
  branch=auto

[merge]
  log=true
  tool=vimdiff
[merge "gemfilelock"]
  name = relocks the gemfile.lock
  driver = bundle lock

[diff "ruby"]
  funcname="^ *\\(\\(class\\|module\\|def\\) .*\\)"

[format]
  pretty="format:%Cred%ae %Creset- %C(yellow)%h %s %Creset(%ar)"

[help]
  autocorrect=1

[log]
  date=short

[alias]
  # amend to the last commit
  amend = commit --amend -C HEAD
  # add only part of the commit to index
  addp = add --patch
  # search through the log
  axe = !sh -c 'git log -S"$0"'
  # show all branches, even across remotes
  branches = branch -a --color -v
  # git cheat sheet
  cheat = !sh -c 'cheat git | less'
  # delete a remote branch
  delete = !sh -c 'git push "$0" :refs/heads/"$1"'
  # merge the branch, keeping its commits in their own branch
  fold = merge --no-ff
  # set a tag
  label = tag -a
  # show commits that haven't been pushed to the remote yet
  pending = !git --no-pager log "$0"/HEAD..HEAD && echo
  # push HEAD to origin HEAD
  put = !sh -c 'git push "$0" HEAD'
  put-force = !sh -c 'git push -f "$0" HEAD'
  # interactive rebase
  ri = rebase --interactive --autosquash
  # diff the index against the previous commit
  staged = diff --cached
  # better status
  stat = status -sb
  # update all submodules
  submodule-pull = submodule foreach "git checkout master && git pull origin master"
  # track a remote branch
  track = checkout -t
  # remove a file from the index
  unstage = reset HEAD --
  # pull changes, show commits since last pull/push
  up = !sh -c 'git pull "$0" HEAD && git log --pretty=format:\"%Cred%ae %Creset- %C(yellow)%s %Creset(%ar)\" HEAD@{1}..'
  # update all remotes, pruning removed tracking branches
  update-remotes = remote update --prune

  # yeah I went there. And I came back. I have a time-share there.
  x = !sh -c 'gitx'

