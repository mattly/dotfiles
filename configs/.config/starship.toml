# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true
[character]

[cmd_duration]
format = " > took [$duration]($style)"

[directory]
read_only = "⛔︎"
truncation_symbol = "… "

[env_var]
[fill]
[hostname]
[jobs]
[line_break]
[localip]
[memory_usage]
[shell]
[shlvl]

[status]
disabled = false

[sudo]
disabled = false
symbol = "☢︎ "
format = " $symbol SUDO"

[time]
[username]

# ---
[aws]
format= "⎮ AWS $profile $region"
# disabled= true
[aws.region_aliases]
us-east-1 = "va"

[azure]
[battery]
[buf]
format = "⎮ buf $version"

[bun]
format = "⎮ bun $version"
disabled = false

[c]
[cmake]
[cobol]
[conda]
[container]
[crystal]
[daml]
[dart]
[deno]
[docker_context]
[dotnet]
[elixir]
[elm]
[erlang]
[fennel]
[gcloud]

[git_branch]
symbol = "⎇"
format = "$symbol $branch(⇢ $remote_branch) "

[git_commit]
[git_state]
[git_metrics]
disabled = false
format = "( ([▲ $added]($added_style))( [▼ $deleted]($deleted_style)))"

[git_status]
style = "f"
modified = " ▲ $count"
untracked = " ⛔︎ $count"
conflicted = " ◼︎ $count"
stashed = " ▽ $count"
staged = " △ $count"
renamed = " ↯ $count"
deleted = " ｘ $count"

ahead = "↑ $count"
behind = "↓ $count"
diverged = "↕ ↑$ahead ↓$behind"
up_to_date = ""

format = "( $all_status$ahead_behind)"

[golang]
format = "⎮ go $version"

[haskell]
[helm]

[java]
format = "⎮ JVM $version"

[julia]
[kotlin]
[kubernetes]
[lua]
[hg_branch]
[nim]
[nix_shell]
[nodejs]
[ocaml]
[openstack]

[package]
disabled = true

[perl]
[php]
[pulumi]
[purescript]
[python]
[rlang]
[raku]
[red]
[ruby]
[rust]
[scala]
[singularity]
[spack]
[swift]

[terraform]
format = "⎮ TF $version (▶︎$workspace)"

[vagrant]
[vlang]
[vcsh]
[zig]
